* exercism-mode
  :PROPERTIES:
  :CUSTOM_ID: exercism-el
  :END:
Exercism mode for Emacs, using the exercism CLI tool.

** Description
This is a minor mode for working with [[https://exercism.io][Exercism]] problems within Emacs. It integrates with [[https://github.com/bbatsov/projectile][projectile-mode]] to use your problem's directory as it's own directory project root. Each programming problem is its own projectile project, which will give you all the features projectile offers for defined projects. The function for finding the project root is ~push~-ed to projectile's ~projectile-project-root-functions~ list, so it will check if your project is in your Exercism workspace, and act accordingly, before any other functions for finding your project root is run. The projectile-project-root function for this mode first looks for ~.exercism/metadata.json~ and upon failing that, looks for where the directory structure rests within the configured exercism workspace. This is especially beneficial, if your Exercism workspace directory is being stored in a VCS, like git.
** Installation
*** Clone the repo
#+begin_src shell
git clone https://github.com/timotheosh/exercism-mode/
#+end_src

*** Vanilla Emacs
**** Install ~projectile~
Follow the quickstart guide for installing projectile [[https://github.com/bbatsov/projectile][here]].
**** Add ~exercism-mode~ to your emacs config.
Add to your ~~/.emacs.d/init.el~ the following:
#+begin_src emacs-lisp
(add-to-list 'load-path "<path to exercism-mode repo>")
(require 'projectile)
(require 'exercism-mode)
(add-hook 'projectile-mode-hook 'exercism-mode)
#+end_src
*** Using ~use-package~
**** Install ~projectile~
Follow the quickstart guide for installing projectile [[https://github.com/bbatsov/projectile][here]].
**** Add ~exercism-mode~ to your emacs config.
Add to your ~~/.emacs.d/init.el~ the following:
#+begin_src emacs-lisp
(use-package exercism-mode
  :load-path "<path to exercism-mode repo>"
  :config
  (add-hook 'projectile-mode-hook 'exercism-mode))
#+end_src
*** Doom Emacs
**** Installation for Doom Emacs
Add the following to your ~packages.el~:
#+begin_src emacs-lisp
(package! exercism-mode :recipe (:host github :repo "timotheosh/exercism-mode"))
#+end_src
**** Config for Doom Emacs
There is nothing else needed to use ~exercism-mode~ in Doom Emacs.
** Available Operations
*** Interactive Functions
- 'exercism-submit-file ::
  Submits the opened file to Exercism.io.
- 'exercism-dired-submit-marked-files ::
  Submits all the marked files within dired to Exercism.io
- 'exercism-download-exercise ::
  Prompts you for the track and exercise name to download, opens a dired session in the newly downloaded exercise.
- 'exercism-download-command ::
  Exercism.io's website gives a cli command to download a given exercise, using
  the exercism cli tool. This function will prompt you to paste the command you
  copied from your web browser, and runs exercism cli for you, and opens a dired
  session on the newly downloaded exercise.
- 'exercism-refresh-exercise ::
  Will redownload the exercise you are viewing right now.
*** Default Keybindings
Change these to whatever works for you.
#+begin_src emacs-lisp :tangle no
(defvar exercism-mode-map
  (let ((map (make-sparse-keymap)))
    (define-key map (kbd "C-c s") 'exercism-submit-file)
    (define-key map (kbd "C-c d") 'exercism-download-exercise)
    (define-key map (kbd "C-c p") 'exercism-download-command)
    (define-key map (kbd "C-c r") 'exercism-refresh-exercise)
    (define-key dired-mode-map (kbd "C-c e") 'exercism-dired-submit-marked-files)
    map))
#+end_src
** Features
1. Minor mode adds a function to find your exercism problem project directory.
2. ~M-x exercism~ Opens a dired session in your Exercism workspace root.
